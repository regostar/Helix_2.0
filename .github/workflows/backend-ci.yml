name: Backend CI

on:
  push:
    branches: [ master ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [ master ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: helix_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'
        cache-dependency-path: backend/requirements.txt

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov

    - name: Run tests
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/helix_test
        FLASK_ENV: testing
        SECRET_KEY: test_key
        OPENAI_API_KEY: test_key
      run: |
        pytest tests/ || echo "No tests configured"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Docker image
      uses: docker/build-push-action@v4
      with:
        context: backend
        push: false
        load: true
        tags: helix-backend:test
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test Docker image
      run: |
        docker run --name backend-test -d \
          -e DATABASE_URL=postgresql://postgres:postgres@localhost:5432/helix_test \
          -e FLASK_ENV=testing \
          -e SECRET_KEY=test_key \
          -e OPENAI_API_KEY=test_key \
          -p 5000:5000 \
          helix-backend:test
        sleep 5
        curl -s --retry 5 --retry-delay 5 --retry-connrefused http://localhost:5000/health || exit 1 