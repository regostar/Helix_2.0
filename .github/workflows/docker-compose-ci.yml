name: Docker Compose CI

on:
  push:
    branches: [ master ]
    paths:
      - 'docker-compose.yml'
      - 'frontend/**'
      - 'backend/**'
      - '.github/workflows/docker-compose-ci.yml'
  pull_request:
    branches: [ master ]
    paths:
      - 'docker-compose.yml'
      - 'frontend/**'
      - 'backend/**'
      - '.github/workflows/docker-compose-ci.yml'

jobs:
  test-compose:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Create env file
      run: |
        cat << EOF > .env
        OPENAI_API_KEY=test_key
        POSTGRES_USER=postgres
        POSTGRES_PASSWORD=postgres
        POSTGRES_DB=helix
        DATABASE_URL=postgresql://postgres:postgres@db:5432/helix
        FLASK_APP=app.py
        FLASK_ENV=testing
        SECRET_KEY=test_key
        EOF

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and start services
      run: docker-compose up -d --build

    - name: Wait for services to be ready
      run: |
        sleep 30
        docker-compose ps

    - name: Test frontend
      run: |
        curl -s --retry 5 --retry-delay 5 --retry-connrefused http://localhost:80 | grep -q "<!DOCTYPE html>" || exit 1

    - name: Test backend
      run: |
        curl -s --retry 5 --retry-delay 5 --retry-connrefused http://localhost:5000/health || exit 1

    - name: Check container logs
      if: always()
      run: |
        echo "Frontend logs:"
        docker-compose logs frontend
        echo "Backend logs:"
        docker-compose logs backend
        echo "Database logs:"
        docker-compose logs db

    - name: Stop services
      if: always()
      run: docker-compose down 